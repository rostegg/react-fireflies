{"version":3,"sources":["components/ParamsController.js","components/Fireflies.js","serviceWorker.js","index.js"],"names":["ParamsController","data","this","props","react_default","a","createElement","build_react_dat_gui_default","onUpdate","onParamChanged","build_react_dat_gui","path","label","min","max","step","Component","Firefly","canvasParams","settings","Object","classCallCheck","seed","Math","random","context","canvasContext","width","height","x","y","speed","size","differentSize","color","isGradient","fadeSpeedRate","randomFadeTime","fadeSpeed","dx","dy","sin","radius","style","createRadialGradient","rgbColor","hexToRGB","addColorStop","concat","abs","cos","beginPath","arc","PI","closePath","fillStyle","buildGradientStyle","fill","update","move","show","hex","parseInt","replace","join","DEFAULT_SETTINGS","blur","count","Fireflies","_this","possibleConstructorReturn","getPrototypeOf","call","updateFireflies","state","firefliesArray","forEach","firefly","draw","clearRect","resizeWindow","window","innerWidth","innerHeight","updateCanvasSize","setState","addFireflies","arr","j","push","removeFireflies","splice","length","paramChangedHandler","diff","fireflies","element","updateSettings","canvas","objectSpread","_this2","document","getElementById","getContext","fillRect","timerId","setInterval","updateInterval","addEventListener","clearInterval","displayParamsChanger","displayFpsStats","Fragment","id","WebkitFilter","components_ParamsController","dist_default","defaultProps","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onSuccess","catch","error","ReactDOM","render","components_Fireflies","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.117cc66d.chunk.js","sourcesContent":["import 'react-dat-gui/build/react-dat-gui.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport DatGui, { DatColor, DatNumber, DatBoolean } from 'react-dat-gui';\n\nclass ParamsController extends Component {\n  static propTypes = {\n    data: PropTypes.object,\n    onParamChanged: PropTypes.func\n  }\n\n  render() {\n    const data = this.props.data;\n    return (\n      <DatGui data={data} onUpdate={this.props.onParamChanged}>\n        <DatColor path='color' label='Color' />\n        <DatNumber path='count' label=\"Count\" min={0} max={5000} step={50}/>\n        <DatNumber path='blur' label=\"Blur\" min={0} max={3} step={0.1}/>\n        <DatNumber path='size' label=\"Size\" min={0.1} max={10} step={0.1}/>\n        <DatNumber path='speed' label=\"Speed\" min={0} max={6} step={0.1}/>\n        <DatNumber path='fadeSpeedRate' label=\"Fade speed rate\" min={0} max={0.4} step={0.01}/>\n        <DatBoolean path=\"randomFadeTime\" label=\"Random fade time\" />\n        <DatBoolean path=\"differentSize\" label=\"Different size\" />\n        <DatBoolean path=\"isGradient\" label=\"Gradient style\" />\n      </DatGui>\n    )\n  }\n}\n\nexport default ParamsController;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport FPSStats from \"react-fps-stats\";\nimport ParamsController from './ParamsController'\n\nclass Firefly {\n\n    constructor(canvasParams, settings){\n        this.seed = Math.random() + .4; \n\n        this.context = canvasParams.canvasContext;\n        this.width = canvasParams.width;\n        this.height = canvasParams.height;\n        \n        this.x = Math.random()*this.width;\n        this.y = Math.random()*this.height;\n        \n        this.speed = settings.speed;  \n        this.size = settings.differentSize ? settings.size*this.seed : settings.size;\n        this.color = settings.color;\n        this.isGradient = settings.isGradient;\n        this.fadeSpeedRate= settings.fadeSpeedRate;\n        this.randomFadeTime = settings.randomFadeTime;\n        this.fadeSpeed = 0;\n        this.dx = (Math.random()*2) * (Math.random() < .5 ? -1 : 1);\n        this.dy = (Math.random()*2) * (Math.random() < .5 ? -1 : 1);\n    }\n\n    move() {\n        this.x += this.speed*Math.sin(this.dx);\n\t\tthis.y += this.speed*Math.sin(this.dy);\n\t\tif (this.x > this.width || this.x < 0) this.dx *= -1;\n\t\tif (this.y > this.height || this.y < 0) this.dy *= -1;\n    }\n\n    buildGradientStyle(radius) {\n        let style = this.context.createRadialGradient(this.x,this.y,0,this.x,this.y, radius*radius);\n        const rgbColor = this.hexToRGB(this.color);\n        style.addColorStop(0.0, `rgba(${rgbColor},1)`);\n        style.addColorStop(0.1, `rgba(${rgbColor},0.3)`);\n        style.addColorStop(1.0, `rgba(${rgbColor},0)`);\n        return style;\n    }\n\n    show() {\n        const radius = this.size * Math.abs(Math.cos(this.fadeSpeed));\n        this.context.beginPath();\n        this.context.arc(this.x,this.y,radius,0,2*Math.PI);\n        this.context.closePath();\n        \n        this.fadeSpeed += this.fadeSpeedRate * (this.randomFadeTime ? this.seed : 1);\n        this.context.fillStyle = this.isGradient ? this.buildGradientStyle(radius) : this.color;\n        this.context.fill();\n    }\n\n    updateCanvasSize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.update();\n    }\n\n    updateSettings(settings) {\n        this.speed = settings.speed;  \n        this.size = settings.differentSize ? settings.size*this.seed : settings.size;\n        this.color = settings.color;\n        this.isGradient = settings.isGradient;\n        this.fadeSpeedRate= settings.fadeSpeedRate;\n        if (!settings.randomFadeTime)\n            this.fadeSpeed = 0;\n        this.randomFadeTime = settings.randomFadeTime;\n        this.update();\n    }\n\n    update() {\n        this.move();\n        this.show();\n    }\n\n    hexToRGB(hex) {\n        hex = parseInt(hex.replace('#',''), 16); \n        return [ (hex >> 16) & 255, (hex >> 8) & 255, hex & 255 ].join(',');\n    }\n}\n\nconst DEFAULT_SETTINGS = { \n    color: \"#FF9B00\",\n    size: 4.7,\n    speed: 0.1,\n    blur: 0,\n    count: 300,\n    fadeSpeedRate: 0.01,\n    differentSize: true,\n    isGradient: true,\n    randomFadeTime: true\n}\n\nclass Fireflies extends Component{\n\n    static propTypes = {\n        width: PropTypes.number,\n        height: PropTypes.number,\n        updateInterval: PropTypes.number,\n        settings: PropTypes.object,\n        displayParamsChanger: PropTypes.bool,\n        displayFpsStats: PropTypes.bool\n    }\n\n    static defaultProps = {\n        ...Component.defaultProps,\n        width: window.innerWidth,\n        height: window.innerHeight,\n        updateInterval: 15,\n        displayParamsChanger: true,\n        displayFpsStats: true\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            canvas: null,\n            canvasContext: null,\n            firefliesArray: [],\n            settings: {...DEFAULT_SETTINGS, ...this.props.settings },\n            width: this.props.width,\n            height: this.props.height\n        }\n    }\n\n    componentDidMount() {\n        const canvas = document.getElementById('fireflies-canvas'),\n            context = canvas.getContext(\"2d\"),\n            width = this.state.width,\n            height = this.state.height;\n\n        context.fillStyle = \"rgba(30,30,30,1)\";\n        context.fillRect(0, 0, width, height);\n        this.setState({\n            canvas: canvas,\n            canvasContext: context\n        });\n        \n        const canvasParams = { canvasContext: context, width: width, height: height },\n            settings = this.state.settings,\n            fireflies = this.state.firefliesArray;\n\n        for(let j = 0; j < settings.count; j++)\n            fireflies.push(new Firefly(canvasParams, settings));\n        \n        this.setState({firefliesArray: fireflies});\n        \n        this.timerId = setInterval(() => this.draw(), this.props.updateInterval);\n\n        window.addEventListener(\"resize\", this.resizeWindow);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    updateFireflies = () => {\n        const fireflies = this.state.firefliesArray;\n\n        fireflies.forEach((firefly)=> {\n            firefly.update();\n        });\n    } \n\n    draw = () => {\n        const canvasContext = this.state.canvasContext,\n            width = this.state.width,\n            height = this.state.height;\n        \n        canvasContext.clearRect(0, 0, width, height);\n        \n        this.updateFireflies();\n    }\n\n    resizeWindow = () => {\n        const width = window.innerWidth,\n            height = window.innerHeight,\n            fireflies = this.state.firefliesArray;\n        \n        fireflies.forEach((firefly) => { firefly.updateCanvasSize(width,height) });\n\n        this.setState({\n            width: width,\n            height: height\n        });\n    }\n\n    addFireflies = (arr,count) => {\n        const canvasParams = { canvasContext: this.state.canvasContext, width: this.state.width, height: this.state.height },\n            settings = this.state.settings;\n        for(let j = 0; j < count; j++)\n            arr.push(new Firefly(canvasParams, settings));\n    }\n\n    removeFireflies = (arr,count) => {\n        arr.splice(arr.length - count);\n    }\n\n    paramChangedHandler = (data) => {\n        const diff  = this.state.settings.count - data.count;\n        const fireflies = this.state.firefliesArray;\n\n        if (diff < 0)\n            this.addFireflies(fireflies,Math.abs(diff));\n    \n        if (diff > 0)\n            this.removeFireflies(fireflies,diff);\n        \n        fireflies.forEach(element => {\n            element.updateSettings(data);\n        });\n\n        this.setState({ \n            firefliesArray: fireflies, \n            settings: data\n        });\n    }\n\n    render() {\n        const displayParamsChanger = this.props.displayParamsChanger,\n            displayFpsStats = this.props.displayFpsStats;\n\n        return (\n            <>\n                <canvas id=\"fireflies-canvas\" width={this.state.width} height={this.state.height} style = {{ WebkitFilter: `blur(${this.state.settings.blur}px)` }}></canvas>\n                { displayParamsChanger &&\n                    <ParamsController data={this.state.settings} onParamChanged={this.paramChangedHandler} ></ParamsController> }\n                { displayFpsStats &&\n                    <FPSStats /> }    \n\n            </>\n        );\n    }\n}\n\nexport default Fireflies;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Fireflies from './components/Fireflies';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Fireflies />,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}